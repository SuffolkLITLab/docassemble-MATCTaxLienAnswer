---
include:
  - docassemble.AssemblyLine:assembly_line.yml
---
features: 
  css: form-styles.css
---
metadata:
  title: |
    Tax-lien answer
  short title: |
    Tax-lien answer
  description: |
    This interview helps someone in Massachusetts respond to a tax lien filed against them and complete their certificate of service.
  can_I_use_this_form: |
    You can use this interview if you have a tax lien filed against you and the answer by date on your Tax Lien Complaint and Citation has not passed. You may also use this interview if you are an attorney representing someone who meets the aforementioned criteria. 
  before_you_start: |
    please gather your Tax Lien Complaint and Citation. 
  maturity: production
  estimated_completion_minutes: 25
  estimated_completion_delta: 30
  languages:
    - en
  help_page_url: https://www.mass.gov/land-court-tax-lien-foreclosure-cases-resources
  help_page_title: Land Court Tax Lien Foreclosure Cases Resources
  LIST_topics: 
    - MO-00-00-00-00
    - MO-09-00-00-00
    - MO-12-00-00-00
  tags: 
    - MO-00-00-00-00
    - MO-09-00-00-00
    - MO-12-00-00-00
  jurisdiction: NAM-US-US+MA
  original_form: https://www.mass.gov/doc/tax-lien-answer-and-certificate-of-service/download
  original_form_published_on: 
  review_date: August 2024
  form_titles:
    - Land Court Tax Lien Answer and Certificate of Service
  form_numbers:
    - 
  fees:
    - Filing fee: 0.00
  authors: 
    - Karla R. Fuentes 
    - Benjamin Joseph Eilert 
  update_notes: |
---
code: |
  # This controls the default country and list of states in address field questions
  AL_DEFAULT_COUNTRY = "US"
---
code: |
  # This controls the default state in address field questions
  AL_DEFAULT_STATE = "MA"
---
code: |
  github_repo_name =  'docassemble-TaxlienAnswer'
---
code: |
  interview_short_title = "Tax Lien Answer and Certificate of Service Form"
---
code: |
  al_form_type = "existing_case" 
---
objects:
  - users: ALPeopleList.using(there_are_any=True)
  - other_parties: ALPeopleList.using(ask_number=True, target_number=1) 
---
sections:
  - review_taxlien_answer: Review your answers
---
#################### Interview order #####################
comment: |
  Controls order and branching logic for questions specific to this form
id: interview_order_taxlien_answer
code: |
  # Set the allowed courts for this interview
  allowed_courts = ['Land Court']
  nav.set_section("review_taxlien_answer")
  user_role = "defendant"
  user_ask_role = "defendant"
  users.gather()
  set_parts(subtitle=str(users))
  Preview_of_taxlien_answer
  docket_number
  property_address.address
  #plaintiffs.gather()
  al_person_answering
  attorneys.gather()
  #attorneys[0].name.first
  #users_address.address
  #users[0].phone_number
  user_relationship_to_property
  users_response_to_taxlien
  users_address.address
  users[0].phone_number
  users[0].mobile_number
  users[0].email
  set_progress(16)
  #bbo_number_if_attorney
  #trial_court.address.address
  set_progress(32)
  #docket_number
  #plaintiffs.gather()
  plaintiffs[0].name.first
  #plaintiff_address.address
  #Plaintiff_service_address
  set_progress(48)
  #users[0].mobile_number
  #users[0].email
  #trial_court.address.address
  set_progress(64)
  #trial_court_county
  #property_address.address
  names_address_persons_served.address
  signature_date
  interview_order_taxlien_answer = True
---
###################### Main order ######################
comment: |
  This block includes the logic for standalone interviews.
  Delete mandatory: True to include in another interview
mandatory: True
code: |
  al_intro_screen
  taxlien_answer_intro
  Preview_of_taxlien_answer
  docket_number
  property_address.address
  #property_address.address_fields()
  #plaintiffs.gather()
  al_person_answering
  #attorneys[0].name.first
  interview_order_taxlien_answer
  users_address.address
  users[0].phone_number
  #trial_court_county
  #property_address.address_fields()
  #plaintiffs.gather()
  plaintiffs[0].name.first
  #plaintiff_address.address
  #Plaintiff_service_address
  names_address_persons_served.address
  signature_date
  basic_questions_signature_flow
  # Store anonymous data for analytics / statistics
  store_variables_snapshot(
      persistent=True,
      data={
          "zip": showifdef("users[0].address.zip"),
          "reached_interview_end": True,
      },
  )
  Tax_Lien_Form_download 
---
id: Taxlien_answer
continue button field: taxlien_answer_intro
question: |
  Tax Lien Answer and Certificate of Service Form Introduction 
subquestion: |
  This interview will help you fill out the forms required to file and serve a tax lien answer and certificate of service. The information you provide will be entered on the court form(s) in the correct places. This interview is free to use. For more information on tax lien forclosures and frequently asked questions 
  [visit the following Land Court page](https://www.mass.gov/land-court-tax-lien-foreclosure-cases-resources).
  
  * Attorneys: In questions referring to "You," "You" is your client.
  * Defendant refers to the person who has the tax lien against them.
  * Plaintiff refers to who is suing. 
 
  Before you get started, please gather:
  
  * Your Tax Lien Complaint and Citation. 
 
  
  
  When you are finished, you will need to:
  
  * Serve this Tax Lien Answer by delivering or mailing a copy to the Plaintiff or their counsel.

  Most people take about 10 minutes to complete this interview.
---
id: Preview_of_taxlien_answer
continue button field: Preview_of_taxlien_answer
question: |
  The following is a preview of the Tax Lien Answer Form and Certificate of Service. 
subquestion: |
  <div class="image-row">
    <div class="image">[FILE Tax_Lien_Answer_Preview.jpg, 100%]</div>
    <div class="image">[FILE Tax_Lien_Answer_Preview_Page_2.jpg, 100%]</div>
  </div>  
---
id: What_is_your_case_docket_number 
question: |
  What is the Land Court docket number for your case?
subquestion: |
  You can find your docket number in your Tax Lien Complaint or Citation. Also, the court use the phrases "case number" and "docket number" interchangeably. 
  
  The following is an example of a docket number: XX TL XXXXXX
  
  Here is a 
  [link to a video on how to find your docket number through the court system](https://www.mass.gov/info-details/how-to-search-court-dockets#video-introduction:-how-to-search-court-dockets-).
mandatory: true
fields:
  - Docket number: docket_number
    required: True 
---
id: Who_is_filling_out_this_form
question: | 
  Who is filling out this form?
fields:
  - I am: al_person_answering
    datatype: radio
    choices: 
      - a self-represented defendant: user 
      - an attorney: attorney          
  - "BBO number": bbo_number
    datatype: text
    show if: 
      variable: al_person_answering
      is: attorney
  - "Attorney's Firm or Agency Name": users1_firm 
    required: False
    input type: area 
    show if: 
      variable: al_person_answering
      is: attorney
under: |
 Defendant refers to the person who has the tax lien against them.
---
sets:
  - attorneys[0].name.first
  - attorneys[0].name.last
  - attorneys[0].name.middle
  - attorneys[0].name.suffix
id: Defendant_attorney_name
question: |
  What is your name?
fields:
  - code: |
      attorneys[0].name_fields()
---
sets:
  - users[i].name.first
  - users[i].name.last
  - users[i].name.middle
  - users[i].name.suffix    
id: other users names
question: |
  % if i == 0 and al_person_answering == "user":
  What is your name?
  % else:
  % if al_form_type in ['starts_case','existing_case','appeal']:
  Who is the defendant you are representing?
  % else:
  What is the name of the ${ ordinal_number(i) } person who is adding their name to
  this form with you?
  % endif
  % endif
fields:
  - code: |
      users[i].name_fields()
---
id: any other users
question: |
  % if al_person_answering == "user": 
  Are there any other defendants? 
  % else:
  % if al_person_answering == "attorney": 
  Are there any other defendants named in the tax lien?
  % endif 
  % endif
subquestion: |
  % if len(users.elements) > 1:  
  So far you have told us about ${comma_and_list(users.complete_elements())}.
  % endif
fields:
  - no label: users.there_is_another
    datatype: yesnoradio
---
sets: 
  - users_address.address
  - users_address.city
id: Users current address 
question: | 
   What is your mailing address? 
subquestion: |
  All further notices will be sent to the address provided, unless you file a change of address with the Land Court and send a copy to the Plaintiff's service address.
fields: 
  - code: users_address.address_fields()
---
objects: 
  - users_address: ALAddress
---
id: What_is_the_users_relation_to_the_property
question: |
  % if al_person_answering == "user": 
  What is your relationship to the property?
  % else:
  % if al_person_answering == "attorney": 
  What is the defendant's relationship to the property?
  % endif 
  % endif
subquestion: |
  You may choose more than one option. 
fields:
  - Defendant is : user_relationship_to_property
    datatype: checkboxes 
    choices:
      - Owner: owner
      - Mortgagee: mortgagee
      - Other: other
    none of the above: False 
  - "Other": if_user_is_other_specify
    input type: area
    show if: user_relationship_to_property["other"] 
---
id: What_is_the_users_response_to_the_tax_lien
question: |
   % if al_person_answering == "user": 
   What is your response to the tax lien?
   % else:
   % if al_person_answering == "attorney": 
   What is the defendant's response to the tax lien?
   % endif 
   % endif
subquestion: |
  You may choose both options if necessary.
fields:
  - Defendant: users_response_to_taxlien
    datatype: checkboxes  
    choices: 
      - Claims the right to redeem the title by paying the amount owed as determined by the Court: claims_right_to_redeem
      - Questions the validity of the Plaintiff's title under the relevant instrument of taking for taxes or collector's deed at issue in this case: questions_the_validity
    none of the above: False 
  - "Reason(s) for questioning the validity of plaintiff's title": if_user_questions_validity_specify_reason
    input type: area 
    show if: users_response_to_taxlien["questions_the_validity"] 
---
sets: 
  - property_address.address
  - property_address.city
id: Property County
question: |
   What is the address of the property?
fields: 
 - code: property_address.address_fields()
--- 
objects:
  - property_address: ALAddress
#---
#sets: 
#  - plaintiff_address.address
#  - plaintiff_address.city
#  - plaintiff_address.zip
#id: Plaintiffs address 
#question: |
#  What is the plaintiff's service address?
#subquestion: |
#  The plaintiff's address can be found on the first page of your tax lien citation under the section labeled **Plaintiff's Service Address And Telephone Number.**
#fields: 
#  - code: plaintiff_address.address_fields()
#under: |
#  **The plaintiff is who is suing you.**
#---
#objects:
#  - plaintiff_address: ALAddress
#---
#id: Plaintiff_service_address 
#question: |
  #Do you intend to serve the plaintiff at their service address?
#field: Plaintiff_service_address
#choices:
#  - Yes
#  - No 
---
sets:
  - names_address_persons_served.address
  - names_address_persons_served.city
id: Certificate of Service
question: |
   I will serve this Tax Lien Answer by delivering or mailing a copy of it by first class mail postage prepaid to the following:
subquestion: |
  Provide the address of where you intend to serve the plaintiff. The plaintiff's address can be found on the first page of your tax lien citation under the section labeled **Plaintiff's Service Address And Telephone Number.**
fields: 
  - Name: service_name
  - Firm name: Firm_name 
    required: false 
  - code: names_address_persons_served.address_fields()  
 
---
objects:
  - names_address_persons_served: ALAddress
---
id: Signature_page
question: |
  Please sign your name below.
subquestion: | 
  By signing your name, you agree that all the information you provided is true and accurate to the best of your knowledge.
  
  Your signature also guarantees that you will serve this answer once completed, to the Plaintiff or their counsel. 
signature: users[0].signature
--- 
id: your contact information
question: |
  What is your contact information?
fields:  
  - Mobile number: users[0].mobile_number
    required: False   
  - Office or Home phone number: users[0].phone_number
    required: False
  - Email address: users[0].email    
    datatype: email
    required: False
  - Fax number: users[0].fax_number
    required: False
validation code: |
  if not (users[0].mobile_number or users[0].phone_number):
    validation_error("You need to give at least one phone number", field="users[0].phone_number")
---
sets:
  - other_parties[i].name.first
  - other_parties[i].name.last
  - other_parties[i].name.middle
  - other_parties[i].name.suffix
id: Tax Lien Plaintiff Name
question: |
  What is the name of the plaintiff?
subquestion: |
  The plaintiff's name can be found on your tax lien complaint and citation. **The plaintiff is who is suing you.**
fields:
  - code: |
      other_parties[i].name_fields(person_or_business='unsure')
---
id: preview taxlien_answer
question: |
  Preview your form before you sign it
subquestion: |
  Here is a preview of the form you will sign on the next page.   
  
  ${ al_court_bundle.as_pdf(key='preview') }

  Click the image to open it in a new tab. Click the "Edit answers" button
  to edit your answers.

  ${ action_button_html(url_action('review_taxlien_answer'), label='Edit answers', color='info') }
  
  Remember to come back to this window to continue and sign your form.
continue button field: taxlien_answer_preview_question    
---
#code: |
#  signature_fields = ['users[0].signature']
---
code: |
  # This is a placeholder for the addresses that will be searched
  # for matching address to court. Edit if court venue is based on 
  # a different address than the user's
  [user.address.address for user in users.complete_elements()]
  addresses_to_search = [user.address for user in users.complete_elements()]
---
id: taxlien answer review screen
event: review_taxlien_answer
question: |
  Review your answers
review:
#  - Edit: trial_court
#    button: |
#      **Trial court**
  
#      % if defined("trial_court.address.county"):
#      * address: ${ trial_court.address.block() }
#      % endif
  - Edit: docket_number
    button: |
      **Docket number**:
      ${ docket_number }
  - Edit: plaintiffs.revisit
    button: |
      **Plaintiffs**

      % for item in plaintiffs:
        * ${ item }
      % endfor
  - Edit: users.revisit
    button: |
      **Users**

      % for item in users:
        * ${ item }
      % endfor
  - Edit: if_user_is_other_specify
    button: |
      **If user is other specify**:
      ${ if_user_is_other_specify }
  - Edit: if_user_questions_validity_specify_reason
    button: |
      **If user questions validity specify reason**:
      > ${ single_paragraph(if_user_questions_validity_specify_reason) }
  - Edit: bbo_number
    button: |
      **Bbo number **:
      ${ bbo_number }
  - Edit: users1_firm
    button: |
      **Users1 firm**:
      > ${ single_paragraph(users1_firm) }
  - Edit: users1_fax
    button: |
      **Users1 fax**:
      ${ users1_fax }
  - Edit: signature_date
    button: |
      **Date of signature**:
      ${ signature_date }
  - Edit: names_address_persons_served
    button: |
      **Names address persons served**:
      > ${ single_paragraph(names_address_persons_served) }
---
continue button field: plaintiffs.revisit
question: |
  Edit plaintiffs
subquestion: |
  ${ plaintiffs.table }

  ${ plaintiffs.add_action() }
---
table: plaintiffs.table
rows: plaintiffs
columns:
  - Name: |
      row_item.name.full() if defined("row_item.name.first") else ""
edit:
  - name.first
confirm: True
---
continue button field: users.revisit
question: |
  Edit users
subquestion: |
  ${ users.table }

  ${ users.add_action() }
---
table: users.table
rows: users
columns:
  - Name: |
      row_item.name.full() if defined("row_item.name.first") else ""
  - Phone number: |
      row_item.phone_number if defined("row_item.phone_number") else ""
  - Mobile number: |
      row_item.mobile_number if defined("row_item.mobile_number") else ""
  - Address: |
      row_item.address.block() if defined("row_item.address.zip") else ""
  - Email: |
      row_item.email if defined("row_item.email") else ""
  - Signature: |
      row_item.signature if defined("row_item.signature") else ""
edit:
  - name.first
  - phone_number
  - mobile_number
  - address.zip
  - email
  - signature
confirm: True

---
id: download taxlien_answer
event: Tax_Lien_Form_download
question: |
  All done
subquestion: |
  Thank you ${users}. Your form is ready to download and deliver.
  
  View, download and send your form below. Click the "Edit answers" button to fix any mistakes.

  ${ action_button_html(url_action('review_taxlien_answer'), label='Edit answers', color='info') }
  
  
  ${ al_user_bundle.download_list_html() }
  

  ${ al_user_bundle.send_button_html(show_editable_checkbox=False) }

progress: 100
---
# ALDocument objects specify the metadata for each template
objects:
  - taxlien_answer_Post_interview_instructions: ALDocument.using(title="Instructions", filename="taxlien_answer_next_steps.docx", enabled=True, has_addendum=False)
  - taxlien_answer_attachment: ALDocument.using(title="Tax-lien answer", filename="Tax_Lien__Form", enabled=True, has_addendum=True, default_overflow_message=AL_DEFAULT_OVERFLOW_MESSAGE)
---
# Bundles group the ALDocuments into separate downloads, such as for court and for the user
objects:
  - al_user_bundle: ALDocumentBundle.using(elements=[taxlien_answer_Post_interview_instructions, taxlien_answer_attachment], filename="taxlien_answer", title="All forms to download for your records", enabled=True)
  - al_court_bundle: ALDocumentBundle.using(elements=[taxlien_answer_attachment],  filename="taxlien_answer", title="All forms to deliver to court", enabled=True)
---
# Each attachment defines a key in an ALDocument. We use `i` as the placeholder here so the same template is 
# used for "preview" and "final" keys, and logic in the template checks the value of 
# `i` to show or hide the user's signature
attachment:
  name: Post-interview-Instructions
  filename: taxlien_answer_next_steps
  docx template file: taxlien_answer_next_steps.docx
  variable name: taxlien_answer_Post_interview_instructions[i]
  skip undefined: True
  tagged pdf: True
---
attachment:
  name: taxlien answer
  filename: Tax_Lien_Form
  variable name: taxlien_answer_attachment[i]
  skip undefined: True
  pdf template file: Tax-Lien-_Form.pdf
  fields:
      - "trial_court_county": ${ property_address.normalized_address().county  }
      - "trial_court_county__1": ${property_address.normalized_address().county }
      - "docket_number": ${ docket_number }
      - "docket_number__1": ${ docket_number }
      - "plaintiffs_name": ${ plaintiffs[0] }
      - "plaintiffs_name__1": ${ plaintiffs[0] }
      - "users_name": ${ users[0] }
      - "users1_name": ${ users[0] }
      - "users1_name__1": |
          % if al_person_answering == "attorney":
          ${ attorneys[0] }
          % else:
          ${ users[0] }
          % endif
      - "users_name__1": ${ users[0] }
      - "users2_name": ${ users[1] }
      - "users3_name": ${ users[2] }
      - "bbo_number": ${ bbo_number } 
      - "users1_firm": ${ users1_firm }
      - "users_is_defendant": ${ al_person_answering == "defendant" }
      - "users_is_attorney": ${al_person_answering == "attorney" }
      - "if_user_is_other_specify": ${ if_user_is_other_specify }
      - "user_is_owner": ${ user_relationship_to_property["owner"] }
      - "user_is_mortgagee": ${ user_relationship_to_property["mortgagee"] }
      - "user_is_other": ${ user_relationship_to_property["other"] }
      - "users_claims_right_to_redeem": ${ users_response_to_taxlien["claims_right_to_redeem"] }
      - "users_question_plaintiff_validity": ${ users_response_to_taxlien["questions_the_validity"] }
      - "if_user_questions_validity_specify_reason": ${ taxlien_answer_attachment.safe_value("if_user_questions_validity_specify_reason") }
      - "bbo_number": ${ bbo_number }
      - "users1_phone_number": ${ users[0].phone_number }
      - "users1_firm": ${ users1_firm }
      - "users1_mobile_number": ${ users[0].mobile_number }
      - "users1_fax": ${ users[0].fax_number }
      - "users1_address_unit": ${ users_address.unit }
      - "users1_address_address": ${ users_address.normalized_address().address }
      - "users1_address_city": ${users_address.normalized_address().city }
      - "users1_address_state": ${users_address.normalized_address().state }
      - "users1_address_zip": ${ users_address.zip }
      - "users1_email": ${ users[0].email }
      - "users1_signature": ${users[0].signature }
      - "users1_signature__1": ${users[0].signature }
      - "signature_date": ${ signature_date }
      - "signature_date__1": ${ signature_date }
      - "names_address_persons_served": |
            ${ service_name }
            ${ Firm_name }
            ${ names_address_persons_served.address}
            ${ names_address_persons_served.unit}
            ${ names_address_persons_served.city}
            ${ names_address_persons_served.state}
            ${ names_address_persons_served.zip}
      - "plaintiff_address": ${ plaintiff_address.normalized_address().address }
      - "plaintiff_address.city": ${ plaintiff_address.normalized_address().city }
      - "plaintiff_address.state": ${ plaintiff_address.normalized_address().state }
      - "Plaintiff_service_address": ${Plaintiff_service_address}
---
code: |
  taxlien_answer_attachment.overflow_fields["if_user_questions_validity_specify_reason"].overflow_trigger = 1068
  taxlien_answer_attachment.overflow_fields["if_user_questions_validity_specify_reason"].label = "Reason(s) for questioning the validity of plaintiff's title"
  #taxlien_answer_attachment.overflow_fields["names_address_persons_served"].overflow_trigger = 2116
  #taxlien_answer_attachment.overflow_fields["names_address_persons_served"].label = "Names address of persons served"
  taxlien_answer_attachment.overflow_fields.gathered = True



